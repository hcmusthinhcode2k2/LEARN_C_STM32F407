/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#include "main.h"

	/*uint32_t *pClkCtrlReg  =   (uint32_t*)0x40023830;
    uint32_t *pPortDModeReg=   (uint32_t*)0x40020C00;
    uint32_t *pPortDOutReg =   (uint32_t*)0x40020C14;*/

int main(void)
{
	RCC_AHB1ENR_t volatile *const pClkCtrlReg	= (RCC_AHB1ENR_t*)0x40023830;
	GPIOx_MODE_t  volatile *const pPortDModeReg	= (GPIOx_MODE_t *)0x40020C00;
	GPIOx_ODR_t	  volatile *const pPortDOutReg	= (GPIOx_ODR_t	*)0x40020C14;
	//1. enable the clock for GPIOD peripheral in the AHB1ENR
	pClkCtrlReg->gpiod_en=1;
	//2.Configure the mode of the IO pin as output
	//a. clear the 24th and 25th bit positions (Clear)
	pPortDModeReg->pin_12=1;
	while(1)
	{
			//3.SET 12th bit of the output data register to make IO pin-12 as high
		    pPortDOutReg->pin_12=1;
		    //introduce small human observalue delay
		    //This loop executes for 10K times
		    for (uint32_t i=0;i<500000;i++);

		    //Turn 0FF the LED
		    *pPortDOutReg->pin_12=0;

		    for (uint32_t i=0;i<500000;i++);

	}
}
